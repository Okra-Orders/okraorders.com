---
// Layout and Base Components
import MainLayout from "@/layouts/MainLayout.astro";
// import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro"; // Removed unused import
import { Icon } from 'astro-icon/components';
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro"; // For demo button link
import ProcessSteps from "@components/sections/misc/ProcessSteps.astro"; // Import the new component

// --- Page Data ---
const pageTitle = "Get Started with Okra Orders | Sign Up";
const pageDescription = "Create your Okra Orders account to streamline catering management. We'll set up your store and guide you through payment onboarding to get you started.";

const signupForm = {
  headline: "Let's Get You Started",
  subHeadlinePre: "Ready to automate the hassle and focus on the food? Fill out the form below to beginâ€”",
  subHeadlineBold: "no credit card required",
  subHeadlinePost: ". We'll create your private account and contact you to finalize billing and payment details, so you can start managing orders and menus.",
  companyHelp: "Used to create your unique Okra Orders web address (e.g., yourcompany.okraorders.com). You can suggest changes later if needed.",
  emailHelp: "This will be your login username.",
  submitButton: "Create My Account & Get Started",
  termsLink: "/terms/",
  privacyLink: "/privacy/",
};

const onboardingProcess = {
  title: "Your Path to Going Live: What to Expect After You Sign Up",
  subTitle: "Here's a simple breakdown of the journey from signup to your first sale:",
  steps: [
    {
      title: "Step 1: Preparing Your Storefront",
      description: `
        <p>After you submit the form, our team gets to work preparing your private account. Within 24 hours, you'll receive an email with a unique link to set your password and log in for the first time.</p>
        <p class="mt-2">While we guide you through the payment setup in the background, you can immediately start building your storefront. This is a fully-featured preview mode where you can:</p>
        <ul class="list-disc list-inside mt-2 space-y-1">
          <li>Create and organize your catering menus.</li>
          <li>Set your business hours and delivery zones.</li>
          <li>Customize your store with your logo and branding.</li>
          <li>Run test orders using a test payment method to see how everything works.</li>
        </ul>
      `
    },
    {
      title: "Step 2: We Activate Your Payments",
      description: `
        <p>To enable you to accept online payments, we need to set up your merchant account with one of our dedicated payment partners. This is a standard, secure process required for any business handling online transactions.</p>
        <p class="mt-2">Our onboarding team will contact you within one business day to start this process. We'll guide you every step of the way.</p>
        <p class="mt-2">This payment activation is essential for you to get paid directly for your orders, and the approval process typically takes just a few days to complete.</p>
      `
    },
    {
        title: "Putting It All Together: Going Live",
        description: `
            <p>Your store becomes fully active and ready to accept customer orders once your payment account is approved.</p>
            <p class="mt-2">You have a flexible 14-day window to work with our team and complete this financial setup. Your paid plan and first billing cycle will only begin after this is complete. There are no obligations, and you can cancel anytime.</p>
        `
    },
    {
      title: "Not Ready? Take a Quick Look Around",
      description: `
        <p>Want to explore our platform without signing up? Check out our public demo instantly. Keep in mind it's a shared environment where data is reset periodically.</p>
        <p class="mt-4"><a href="https://demo.okraorders.com" target="_blank" rel="noopener noreferrer" class="font-semibold text-primary hover:underline">Try the Live Demo (No Signup Needed) &rarr;</a></p>
        <p class="mt-2 text-sm">Please do not enter any real customer, business, or payment information in the demo.</p>
      `
    }
  ]
};

const featureReinforcement = {
  headline: "Everything You Need to Run Your Catering Business:",
  features: [
    { icon: "heroicons:clipboard-document-list", text: "Manage Menus Easily: Set up items, options & copy across locations." },
    { icon: "heroicons:shopping-cart", text: "Preview Ordering: See the smooth customer experience." },
    { icon: "heroicons:paint-brush", text: "Brand Your Store: Add your logo and explore setup." }
  ]
};

---

<MainLayout title={pageTitle} meta={pageDescription}>

  <div class="container mx-auto px-6 py-12 md:py-24">

    <!-- 1. Header/Nav assumed handled by MainLayout -->

    <!-- 2. Main Content Area: Headline + Signup Form -->
    <section class="max-w-xl mx-auto text-center mb-16 md:mb-24" id="signup-section">
      <h1 class="text-4xl md:text-5xl font-bold text-neutral-800 mb-4">{signupForm.headline}</h1>
      <p class="text-lg text-gray-600 mb-8">
          {signupForm.subHeadlinePre}<strong class="font-bold text-neutral-800">{signupForm.subHeadlineBold}</strong>{signupForm.subHeadlinePost}
      </p>

      <form id="signup-form" class="text-left space-y-4" name="signup" method="POST" action="https://api.okraorders.com/api:8vZopWhd/signup">
        <!-- Honeypot field for bot protection. Do not fill this out. -->
        <div class="hidden" aria-hidden="true">
          <label for="honeypot-email">Do not fill this out</label>
          <input type="email" id="honeypot-email" name="email2" tabindex="-1" autocomplete="off">
        </div>

        <div>
          <label for="companyName" class="block text-sm font-medium text-gray-700 mb-1">Company Name</label>
          <input type="text" id="companyName" name="company_name" required class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary bg-white" aria-describedby="companyNameHelp">
          <p id="companyNameHelp" class="mt-1 text-xs text-gray-500">{signupForm.companyHelp}</p>
        </div>

        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Your Email Address</label>
          <input type="email" id="email" name="email" required class="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-primary focus:border-primary bg-white" aria-describedby="emailHelp">
          <p id="emailHelp" class="mt-1 text-xs text-gray-500">{signupForm.emailHelp}</p>
        </div>

        <div class="flex items-start">
          <div class="flex items-center h-5">
            <input id="terms" name="terms" type="checkbox" required class="focus:ring-primary h-4 w-4 text-primary border-gray-300 rounded">
          </div>
          <div class="ml-3 text-sm">
            <label for="terms" class="text-gray-700">I agree to the <a href={signupForm.termsLink} target="_blank" class="text-primary hover:underline">Terms of Service</a> and <a href={signupForm.privacyLink} target="_blank" class="text-primary hover:underline">Privacy Policy</a>.</label>
          </div>
        </div>

        <div class="pt-4">
           <button type="submit" class="w-full inline-flex justify-center py-2.5 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-light transition duration-150 ease-in-out">
             {signupForm.submitButton}
           </button>
        </div>
      </form>
    </section>

    <!-- Success Message -->
    <section id="success-message" class="hidden max-w-xl mx-auto text-center mb-16 md:mb-24">
        <div class="bg-green-50 p-8 rounded-lg border border-green-200">
            <h2 class="text-3xl font-bold text-green-800 mb-4">Thank You!</h2>
            <p class="text-lg text-neutral-700">We've received your details. Our team will start setting up your account and will be in touch shortly to finalize everything. Welcome aboard!</p>
        </div>
    </section>

    <!-- 3. Onboarding Process Section -->
    <div class="my-16 md:my-24">
        <ProcessSteps
            title={onboardingProcess.title}
            subTitle={onboardingProcess.subTitle}
            steps={onboardingProcess.steps}
        />
    </div>

    <!-- 4. Key Feature Reinforcement -->
    <section class="text-center mb-8 md:mb-24">
        <h2 class="text-3xl font-bold text-neutral-800 mb-8">{featureReinforcement.headline}</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-10 max-w-4xl mx-auto">
           {featureReinforcement.features.map(feature => (
             <div class="flex items-center text-left space-x-4">
                <div class="flex-shrink-0">
                    <Icon name={feature.icon} class="w-8 h-8 text-primary" />
                </div>
                <p class="text-lg text-neutral-700">{feature.text}</p>
             </div>
           ))}
        </div>
    </section>

  </div>

</MainLayout>

<script>
  const form = document.getElementById('signup-form') as HTMLFormElement | null;
  const signupSection = document.getElementById('signup-section');
  const successMessage = document.getElementById('success-message');

  if (form && signupSection && successMessage) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const submitButton = form.querySelector('button[type="submit"]');

      // Disable button to prevent multiple submissions
      if (submitButton) {
        submitButton.setAttribute('disabled', 'true');
        submitButton.textContent = 'Submitting...';
      }

      try {
        await fetch(form.action, {
          method: 'POST',
          body: formData,
          headers: {
            'Accept': 'application/json'
          }
        });
      } catch (error) {
        // Log error for debugging, but still show success to the user/bot
        console.error('Form submission error:', error);
      } finally {
        // Hide form section and show success message
        signupSection.classList.add('hidden');
        successMessage.classList.remove('hidden');
      }
    });
  }
</script>

<style>
  /* Optional: Add minor style adjustments if needed */
</style> 