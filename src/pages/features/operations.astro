---
// Layout and Base Components
import MainLayout from "@/layouts/MainLayout.astro";
// import HeroBackground from "@components/sections/landing/HeroBackground.astro"; // Removed old hero
import HeroImage from "@components/sections/landing/HeroImage.astro"; // Added HeroImage
import FeaturesStatsAlt from "@components/sections/features/FeaturesStatsAlt.astro";
import { Icon } from 'astro-icon/components';
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import FAQ from "@components/sections/misc/FAQ.astro";
import QuoteFeatureSplit from "@components/sections/misc/QuoteFeatureSplit.astro";
import IconListSection from "@components/sections/features/IconListSection.astro";
import CTASection from "@components/sections/misc/CTASection.astro";
// import heroBgPrep from '@/images/hero-bg-prep.png'; // No longer used for hero
import editOrderImage from '@/images/edit-order.png'; // Import the new hero image
import heroBgImage from "@/images/stacked-waves-haikei.svg"; // Import hero background consistent with store-management
import unifiedViewImg from '@/images/ezcater-order-inside-okra.png';
import ctaBgImage from "@/images/layered-waves-haikei.svg";
import storeChangeImage from "@/images/store-change.png";

// --- Helper Functions ---
// Simple SVG placeholder function (replicated for self-containment)
const svgPlaceholder = (width: number, height: number, text: string = "Placeholder") => {
  const escapedText = text.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  return `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 ${width} ${height}' width='${width}' height='${height}'%3E%3Crect width='100%25' height='100%25' fill='%23E5E7EB'/%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' fill='%236B7280' font-family='sans-serif' font-size='16'%3E${escapedText}%3C/text%3E%3C/svg%3E`; // Tailwind gray-200 background, gray-500 text
}

// --- Page Data ---
const pageTitle = "Streamlined Catering Operations & Order Management | Okra Orders";

const hero = {
  title: "Manage Orders, Payments, and Fulfillment – All in One Place",
  subTitle: "Stop chasing orders across different platforms. Okra Orders centralizes your entire catering operation, from viewing incoming orders from multiple sources to managing payments and optimizing kitchen workflow.",
  imgAlt: "Admin interface showing an order being edited in Okra Orders",
  imgSrc: editOrderImage,
  backgroundImageURL: heroBgImage.src
};

const featureUnifiedView = {
  title: "See Everything at a Glance",
  subTitle: "Get a complete picture of your daily workload instantly. Okra's central dashboard displays all your orders – whether placed directly through your Okra storefront or synced from <strong>ezCater</strong>. Filter by date, status, store, or source to plan your prep efficiently.",
  listItems: [
    "Single view for Okra and ezCater orders.",
    "Powerful filtering and search capabilities.",
    "Clear status indicators for each order.",
    "Simplifies daily kitchen planning and preparation.",
  ],
  imgSrc: unifiedViewImg.src, // Use .src for Astro Image prop
  imgAlt: "Screenshot of Okra dashboard showing an ezCater order listed alongside direct orders",
  imagePosition: "left" as const,
};

const quoteClarity = {
  quoteContent: "Right now, our managers check ezCater, then our internal system, then maybe emails to figure out the day's orders. Seeing everything, including ezCater, on one Okra dashboard will be the biggest help for planning our daily kitchen prep.",
  quoteAttribution: "- Operational Challenge Voiced by Catering Team",
  featureIconName: "heroicons:clipboard-document-list",
  featureBadgeText: "Operational Clarity",
  featureTitle: "Know Exactly What Needs Doing, Without the Guesswork",
  featureDescription: "Start your day with confidence. Seeing all your direct and ezCater orders consolidated in one clear dashboard means no more switching tabs or worrying about missed requests. Plan your kitchen prep accurately, manage fulfillment smoothly, and track the status of every single order from pending to paid, all in real-time.",
  layoutDirection: "quote-left" as const,
};

const featureOrderEditing = {
  title: "Adapt to Changes Instantly",
  subTitle: "Customer needs to add drinks last minute? Increase the headcount? No problem. Okra allows your admin team to easily edit *any* detail of an existing order – items, quantities, options, delivery info – right up until it's time for fulfillment. Use the \"Open Food\" feature to add completely custom items on the fly.",
  listItems: [
    "Modify quantities, items, and customizations easily.",
    "Update delivery addresses or pickup times.",
    "Add custom \"Open Food\" items with unique pricing.",
    "Flexibility accommodates last-minute customer requests.",
  ],
  imgAlt: "Video showing admin editing order details",
  imagePosition: "right" as const,
};

const featureFulfillment = {
  title: "Optimize Your Kitchen Workflow",
  subTitle: "Manage your kitchen capacity and delivery logistics effectively. Okra supports ghost kitchen operations seamlessly and allows admins to easily transfer orders between locations to balance workload or accommodate driver availability – all without impacting the customer.",
  listItems: [
    "Designate specific locations as hidden Ghost Kitchens.",
    "System intelligently assigns orders based on proximity (delivery).",
    "Manually transfer orders between any stores within your brand.",
    "Improve efficiency and manage kitchen load effectively.",
  ],
  imgObject: storeChangeImage, // Use imported image object
  imgAlt: "Admin changing the fulfilling store for a catering order", // Update alt text
  imgWidth: 500, // Add estimated width
  imgHeight: 450, // Add estimated height
  imagePosition: "left" as const,
};

// Config for Payment Management IconListSection
const paymentManagement = {
  title: "Streamlined & Reliable Payments",
  subTitle: "Take the stress out of getting paid. Okra handles payment capture securely based on your rules, notifies you of issues, and provides tools to manage payments effectively right within the app.",
  items: [
    { iconName: "heroicons:credit-card", text: "Automated Capture" },
    { iconName: "heroicons:clipboard-document-check", text: "Clear Status Tracking" },
    { iconName: "heroicons:exclamation-triangle", text: "Proactive Error Handling" },
  ],
  // Optional footer: "(In-app Void & Refund capabilities coming soon!)" - Not handled by default IconListSection
};

const finalCTA = {
  title: "Ready to Streamline Your Day-to-Day Operations?",
  subTitle: "Discover how Okra Orders brings clarity and efficiency to managing your catering orders and fulfillment.",
  primaryBtn: "Start Free Trial",
  primaryBtnURL: "/signup",
  secondaryBtn: "Try Live Demo",
  secondaryBtnURL: "https://demo.okraorders.com",
  bgImageURL: ctaBgImage.src, // Add background image
  textColor: "white" as const // Keep text white
};

const operationsFaqs = {
  title: "Your Operational Questions Answered", // Add title for FAQ component
  faqs: [
    {
      question: "How do we manage daily prep if orders come from both Okra and ezCater?",
      answer: "Okra provides a unified order dashboard where you see all incoming orders, clearly marked by source (Okra or ezCater). This gives your kitchen team a single, consolidated view for planning daily production and fulfillment without needing to check multiple systems."
    },
    {
      question: "Customers often call to change order details (like headcount or adding an item) after placing an order. How does Okra handle edits?",
      answer: "Okra gives your admin team full flexibility. You can open any existing order (until it's processed for payment/fulfillment) and modify quantities, add/remove items, update delivery details, apply discounts, or even add completely custom \"Open Food\" items with specific pricing to accommodate any request."
    },
    {
      question: "We have a central kitchen (ghost kitchen) that fulfills orders for some areas. How does that work in Okra without confusing customers?",
      answer: "Okra handles this seamlessly. You designate your ghost kitchens internally. For delivery orders, the system automatically assigns the order to the closest capable kitchen (which could be a ghost kitchen), but the customer only interacts with your main brand presence. Admins can also manually transfer orders between any locations (ghost or regular) to manage kitchen load or driver logistics."
    },
    {
      question: "How do we know if a customer's payment actually went through, especially since it's charged later?",
      answer: "The order dashboard clearly displays the payment status for each order (e.g., Pending, Paid, Failed). You can set rules for when automatic charging occurs (e.g., day of delivery). If an automated charge fails, notifications can be sent to your team and the customer. Admins can also manually trigger payment attempts."
    },
    {
      question: "What happens if a customer's primary card fails? Do we lose the order?",
      answer: "Not necessarily. If a customer has saved multiple payment methods, Okra can be configured to automatically try charging a secondary card if the primary one fails. This increases the chance of successful payment capture without manual intervention."
    },
    {
      question: "Can different staff members have different levels of access (e.g., only viewing orders vs. editing menus)?",
      answer: "Yes. Okra includes role-based access control. You can assign roles like Store Manager or Staff, limiting their view and actions to only what's necessary for their job, which helps prevent accidental errors and maintains control."
    },
    {
      question: "How are we notified about new orders? Can it become overwhelming?",
      answer: "You have control. Okra can send email notifications to designated store managers or staff for new orders. However, you can configure the frequency or disable these if the volume is too high, relying instead on the central order dashboard for management."
    }
  ]
};

---

<MainLayout title={pageTitle}>

  <!-- Page Hero Section -->
  <div class="mb-12"> {/* Wrapper div consistent with store-management.astro */}
      <HeroImage
        title={hero.title}
        subTitle={hero.subTitle}
        primaryBtn={undefined}
        primaryBtnURL={undefined}
        secondaryBtn={undefined}
        secondaryBtnURL={undefined}
        src={hero.imgSrc}
        alt={hero.imgAlt}
        imgWidth={800}
        withReview={false}
        imageScale="scale-90"
        rightOffset="right-[-11rem]"
        minSectionHeight="min-h-[600px]"
        backgroundImageURL={hero.backgroundImageURL}
      />
  </div>

  <!-- Feature Detail 1: Unified Order View -->
  <section class="py-16 md:py-24 bg-white rounded-xl my-12">
    <FeaturesStatsAlt
        title={featureUnifiedView.title}
        subTitle={featureUnifiedView.subTitle}
        benefits={featureUnifiedView.listItems}
        imgSrc={featureUnifiedView.imgSrc}
        imgAlt={featureUnifiedView.imgAlt}
        imgWidth={500}
        imgHeight={600}
        imagePosition={featureUnifiedView.imagePosition}
     />
  </section>

  <!-- Gain Operational Clarity Section -->
  <QuoteFeatureSplit
      quoteContent={quoteClarity.quoteContent}
      quoteAttribution={quoteClarity.quoteAttribution}
      featureIconName={quoteClarity.featureIconName}
      featureBadgeText={quoteClarity.featureBadgeText}
      featureTitle={quoteClarity.featureTitle}
      featureDescription={quoteClarity.featureDescription}
      layoutDirection={quoteClarity.layoutDirection}
  >
      <Fragment slot="feature-graphic">
          <!-- Screenshot focusing on the Order Dashboard grid with clear status indicators -->
      </Fragment>
  </QuoteFeatureSplit>

  <!-- Feature Detail 2: Flexible Order Editing -->
  <section class="py-16 md:py-24">
    <FeaturesStatsAlt
        title={featureOrderEditing.title}
        subTitle={featureOrderEditing.subTitle}
        benefits={featureOrderEditing.listItems}
        imagePosition={featureOrderEditing.imagePosition}
    >
        <video 
            slot="media" 
            class="rounded-xl w-full h-auto shadow-md"
            src="/videos/order-modifications.mp4" 
            autoplay 
            loop 
            muted 
            playsinline
            preload="metadata"
            controls 
            aria-label={featureOrderEditing.imgAlt}
        >
            Your browser does not support the video tag.
        </video>
    </FeaturesStatsAlt>
  </section>

  <!-- Feature Detail 3: Fulfillment Optimization -->
  <section class="py-16 md:py-24 bg-white rounded-xl">
     <FeaturesStatsAlt
        title={featureFulfillment.title}
        subTitle={featureFulfillment.subTitle}
        benefits={featureFulfillment.listItems}
        imagePosition={featureFulfillment.imagePosition}
        imgObject={featureFulfillment.imgObject}
        imgAlt={featureFulfillment.imgAlt}
        imgWidth={featureFulfillment.imgWidth}
        imgHeight={featureFulfillment.imgHeight}
    />
  </section>

  <!-- Feature Detail 4: Payment Management (Using IconListSection) -->
  <IconListSection 
      title={paymentManagement.title}
      subTitle={paymentManagement.subTitle}
      items={paymentManagement.items}
  />

  <!-- CTA Section (Using CTASection Component) -->
  <CTASection
      title={finalCTA.title}
      subTitle={finalCTA.subTitle}
      primaryBtn={finalCTA.primaryBtn}
      primaryBtnURL={finalCTA.primaryBtnURL}
      secondaryBtn={finalCTA.secondaryBtn}
      secondaryBtnURL={finalCTA.secondaryBtnURL}
      bgImageURL={finalCTA.bgImageURL}
      textColor={finalCTA.textColor}
  />

  <!-- FAQ Section -->
  <section class="py-16 md:py-24 bg-neutral-50 dark:bg-neutral-900 my-12 rounded-xl">
    <FAQ title={operationsFaqs.title} faqs={operationsFaqs} />
  </section>

</MainLayout>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    // --- Section Animations on Scroll ---
    gsap.utils.toArray<HTMLElement>('section').forEach(section => {
      gsap.from(section, {
        scrollTrigger: {
          trigger: section,
          start: "top 85%",
          end: "bottom 15%", 
          toggleActions: "play none none reverse",
          // markers: true, 
        },
        opacity: 0,
        y: 30,
        duration: 0.6,
        ease: "power1.out",
      });
    });
  });
</script> 