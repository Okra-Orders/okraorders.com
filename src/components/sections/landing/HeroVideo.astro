---
// Import the necessary dependencies
import PrimaryCTA from "@components/ui/buttons/PrimaryCTA.astro";
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
import ReviewComponent from "@components/ui/blocks/ReviewComponent.astro";
// Removed Image import

// Define props from Astro
const {
  title,
  subTitle,
  primaryBtn,
  primaryBtnURL,
  secondaryBtn,
  secondaryBtnURL,
  withReview,
  avatars,
  starCount,
  rating,
  reviews,
  videoSrc,
  videoAlt,
  mediaWidth = 800, // Use this for video width
} = Astro.props;

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  primaryBtn?: string;
  primaryBtnURL?: string;
  secondaryBtn?: string;
  secondaryBtnURL?: string;
  withReview?: boolean;
  avatars?: Array<string>;
  starCount?: number;
  rating?: string;
  reviews?: string;
  videoSrc?: string; // Optional video source
  videoAlt?: string; // Optional video alt text
  mediaWidth?: number; // Optional video width
}

---

<!-- Defining a grid container that holds all the content -->
<section
  class="mx-auto grid max-w-[85rem] gap-4 px-4 py-14 sm:px-6 md:grid-cols-2 md:items-center md:gap-8 lg:px-8 2xl:max-w-full"
>
  <!-- Title and description -->
  <div id="hero-content" class="pt-16 md:pt-24">
    <h1
      id="hero-title"
      class="block text-balance text-3xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 sm:text-4xl lg:text-6xl lg:leading-tight"
    >
      <Fragment set:html={title} />
    </h1>
    {subTitle &&
    <p
      id="hero-subtitle"
      class="mt-3 text-pretty text-lg leading-relaxed text-neutral-700 dark:text-neutral-400 lg:w-4/5"
    >
      {subTitle}
    </p>
    }
    <div id="hero-buttons" class="mt-7 grid w-full gap-3 sm:inline-flex">
      {primaryBtn &&
      <PrimaryCTA title={primaryBtn} url={primaryBtnURL} />
      }
      {secondaryBtn &&
      <SecondaryCTA title={secondaryBtn} url={secondaryBtnURL} />
      }
    </div>
    { withReview &&
    <ReviewComponent avatars={avatars} starCount={starCount} rating={rating} reviews={reviews} />
    }
  </div>
  <!-- Hero Media Section (Video ONLY) -->
  <div class="flex w-full items-center justify-center" id="hero-video-container">
      <div class="overflow-hidden rounded-lg">
        {/* Render Video if videoSrc is provided */}
        {videoSrc && (
          <video
              src={videoSrc}
              aria-label={videoAlt ?? 'Hero section video'}
              width={mediaWidth}
              class="h-auto w-full object-cover object-center rounded-lg"
              autoplay
              loop
              muted
              playsinline
              preload="auto"
          >
              Your browser does not support the video tag.
          </video>
        )}
    </div>
  </div>
</section>