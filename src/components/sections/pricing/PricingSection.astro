---
// Import SecondaryCTA component for use in this module
import SecondaryCTA from "@components/ui/buttons/SecondaryCTA.astro";
// import Icon from "@components/ui/icons/Icon.astro"; // Removed old import
import { Icon } from 'astro-icon/components'; // Added new import

// Define props from Astro
const { pricing } = Astro.props;

// Define TypeScript type for products.
// Renamed to Plan for clarity
type Plan = {
  name: string;
  description: string;
  price: string;
  cents: string;
  billingFrequency: string;
  features: Array<string>;
  purchaseBtnTitle: string;
  purchaseLink: string;
};

// Adjusted interface slightly based on JSON structure
interface PricingSectionProps {
  pricing: {
    title: string;
    subTitle: string;
    badge: string; // Badge for the highlighted plan
    thirdOption: string; // Text for the bottom CTA
    btnText: string; // Button text for the bottom CTA
    plan1: Plan;
    plan2: Plan;
    plan3: Plan;
    // Can add plan4?: Plan; if needed later
  };
}

// Extract plans into an array for easier iteration
const plans = [pricing.plan1, pricing.plan2, pricing.plan3];

---

<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Section heading and sub-heading -->
  <div class="mx-auto mb-10 max-w-2xl text-center lg:mb-14">
    <h2
      class="text-balance text-2xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
    >
      {pricing.title}
    </h2>
    <p class="mt-1 text-pretty text-neutral-600 dark:text-neutral-400">
      {pricing.subTitle}
    </p>
  </div>
  <!-- Updated grid for 3 plans -->
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 items-center justify-center">
    {
      plans.map((plan, index) => {
        // Determine classes based on index (e.g., highlight plan 2)
        const isHighlighted = index === 1;
        const cardClasses = isHighlighted
          ? "bg-gradient-primary-highlight text-white shadow-xl p-6 rounded-xl" // Applied custom green gradient class
          : "bg-gray-100 dark:bg-neutral-800 p-6 rounded-xl border border-gray-200 dark:border-neutral-700"; // Standard card style
        const titleClasses = isHighlighted ? "text-white" : "text-neutral-800 dark:text-neutral-100";
        const descriptionClasses = isHighlighted ? "text-primary-100 dark:text-primary-200" : "text-neutral-600 dark:text-neutral-300";
        const priceClasses = isHighlighted ? "text-white" : "text-neutral-800 dark:text-neutral-200";
        const centsClasses = isHighlighted ? "text-primary-200 dark:text-primary-300" : "text-neutral-600 dark:text-neutral-400";
        const frequencyClasses = isHighlighted ? "text-primary-100 dark:text-primary-200" : "text-sm text-neutral-500 dark:text-neutral-400";
        const featureClasses = isHighlighted ? "text-primary-100 dark:text-primary-200" : "text-neutral-600 dark:text-neutral-300";
        const buttonClasses = isHighlighted
          ? "block rounded-full bg-white/90 px-8 py-3 text-center text-sm font-bold text-primary outline-hidden ring-primary-300 transition duration-300 hover:bg-white focus-visible:ring-3 active:bg-gray-100 md:text-base"
          : "block rounded-full bg-gray-500 px-8 py-3 text-center text-sm font-bold text-gray-100 outline-hidden ring-indigo-300 transition duration-100 hover:bg-gray-600 focus-visible:ring-3 active:text-gray-300 md:text-base";

        return (
          <div class={cardClasses}>
            <div class="mb-4 flex flex-col items-start justify-between gap-4 lg:flex-row">
               <div>
                  <h3 class={`text-2xl font-bold ${titleClasses} sm:text-3xl`}>
                    {plan.name}
                  </h3>
                  <p class={descriptionClasses}>{plan.description}</p>
               </div>
                {isHighlighted && (
                   <span
                    class="order-first inline-block rounded-full bg-white/20 px-3 py-1 text-xs font-bold uppercase tracking-wider text-center text-white lg:order-none"
                    >{pricing.badge}
                   </span>
                )}
            </div>

            <div class="mb-4">
              <span class={`text-4xl font-bold ${priceClasses}`}>
                {plan.price.startsWith("$") || plan.price === "Custom" ? plan.price : `$${plan.price}`}
              </span>
              <span class={`text-lg font-bold ${centsClasses}`}>{plan.cents}</span>
              <span class={`ms-3 ${frequencyClasses}`}>{plan.billingFrequency}</span>
            </div>

            <ul class={`mb-6 space-y-2 ${featureClasses}`}>
              {
                plan.features.map((feature: string) => (
                  <li class="flex items-center gap-1.5">
                    <Icon name="heroicons:check-circle" class="h-5 w-5 shrink-0 text-primary" /> {/* Use primary color for check */} 
                    <span>{feature}</span>
                  </li>
                ))
              }
            </ul>

            <a href={plan.purchaseLink} class={buttonClasses}>
              {plan.purchaseBtnTitle}
            </a>
          </div>
        );
      })
    }
  </div>
</section>
