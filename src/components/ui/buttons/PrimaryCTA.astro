---
// import Icon from "@components/ui/icons/Icon.astro"; // Removed old import
import { Icon } from 'astro-icon/components'; // Corrected import path
// Destructure the properties from Astro.props
const { title, url, noArrow, inverted = false } = Astro.props; // Keep inverted prop for now, but won't use it
// Define TypeScript interface for the properties
interface Props {
  title?: string;
  url?: string;
  noArrow?: boolean;
  inverted?: boolean;
}
// Revert to Tailwind classes (Preline plugin is disabled)
const baseClasses = [
  "inline-flex", "items-center", "justify-center", "gap-2", 
  "whitespace-nowrap", 
  "rounded-full", 
  "px-6", "py-3",
  "text-center", "text-sm", "font-medium", 
  "shadow-sm", 
  "ring-offset-white", 
  "transition", "duration-300", "ease-in-out", 
  "focus:outline-none", "focus:ring-2", "focus:ring-primary", "focus:ring-offset-2", 
  "disabled:pointer-events-none", "disabled:opacity-50", 
  "dark:focus:ring-offset-neutral-800", 
  "lg:text-base"
];

// Standard variant using Tailwind classes (manual .bg-primary)
const standardVariantClasses = [
  "bg-primary",
  "text-white",
  "hover:bg-green-700", // Using standard green shade for hover - CHECK THIS
  "active:bg-green-800" // Using standard green shade for active - CHECK THIS
];

// Inverted variant classes (manual .border-primary, .text-primary)
const invertedVariantClasses = [
  "border-2", 
  "border-primary", 
  "text-primary", 
  "bg-white", // Explicit white background
  "hover:bg-primary/10" // Need to check if this works, might need manual class
];

---

<!-- Link styled as a button, with dynamic title, URL, and optional arrow -->
<a
  href={url}
  class:list={[
    baseClasses,
    // Restore conditional logic
    inverted ? invertedVariantClasses : standardVariantClasses
  ]}
>
  {title}
  <!-- Display the arrow based on the 'noArrow' property -->
  {noArrow ? null : <Icon name="heroicons:arrow-right" class="w-5 h-5" />}
</a>
