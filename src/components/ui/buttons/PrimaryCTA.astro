---
// import Icon from "@components/ui/icons/Icon.astro"; // Removed old import
import { Icon } from "astro-iconify"; // Added new import
// Destructure the properties from Astro.props
const { title, url, noArrow } = Astro.props;
// Define TypeScript interface for the properties
interface Props {
  title?: string;
  url?: string;
  noArrow?: boolean;
}
// Define CSS classes for styling the button
const baseClasses =
  "group inline-flex items-center justify-center gap-x-2 rounded-lg px-4 py-3 text-sm font-bold text-neutral-50 ring-offset-white transition duration-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2";
const borderClasses = "border border-transparent";
// Use the variable-linked Tailwind classes
// Assuming hover/active states are defined in tailwind.config.cjs referencing CSS vars
const bgColorClasses =
  "bg-primary hover:bg-primary-hover active:bg-primary-active"; // Or use hover:bg-primary/90 if hover vars aren't defined
const disableClasses = "disabled:pointer-events-none disabled:opacity-50";
const fontSizeClasses = "2xl:text-base";
---

<!-- Link styled as a button, with dynamic title, URL, and optional arrow -->
<a
  class={`${baseClasses} ${borderClasses} ${bgColorClasses} ${disableClasses} ${fontSizeClasses}`}
  href={url}
>
  {title}
  <!-- Display the arrow based on the 'noArrow' property -->
  {noArrow ? null : <Icon name="heroicons:arrow-right" />}
</a>
