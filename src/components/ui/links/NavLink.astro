---
// Destructure the properties from Astro.props
const { url, name } = Astro.props;

// Define TypeScript interface for the properties
interface Props {
  url: string;
  name: string;
}
---

<!--
Re-usable link component for navigation bar. Highlights the active link
by comparing the current URL with the href of each link.
We assign an ID matching the URL for easy reference in our script.
If URL is '/' (home page), assign ID as 'home' 
-->
<a
  id={url === "/" ? "home" : url.replace(/^\/|\/$/g, "")}
  href={url}
  data-astro-prefetch
  class="rounded-lg px-2 py-2 text-base text-neutral-600 outline-none ring-zinc-500 transition duration-300 hover:text-primary focus:text-primary focus-visible:ring-2 focus-visible:ring-primary dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-primary dark:focus:outline-none md:py-3"
>
  {name}
</a>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let url = window.location.pathname;
    let navId;

    if (url === "/") {
      navId = "home";
    } else {
      navId = url.replace(/^\/|\/$/g, "");
    }

    let nav = document.getElementById(navId);

    if (nav) {
      nav.classList.remove(
        "text-neutral-600",
        "dark:text-neutral-400",
        "hover:text-primary",
        "dark:hover:text-primary"
      );
      nav.classList.add(
        "font-semibold",
        "text-primary",
        "dark:text-primary-light"
      );
      nav.setAttribute("aria-current", "page");
    }
  });
</script>
